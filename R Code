#
# Competition 1: Titanic
# Myron Chang - mc7bk
# SYS 6018
#
library(tidyverse) # Load the core tidyverse packages: ggplot2, tibble, 
# tidyr, readr, purrr, and dplyr
#
# 
#
#
#
# Import the files
train <- read_csv("train.csv")
test <- read_csv("test.csv")

# Identify and re-classify the categorical variables in both datasets
train$PassengerId <- factor(train$PassengerId)
train$Survived <- factor(train$Survived)
train$Pclass <- factor(train$Pclass)

test$PassengerId <- factor(test$PassengerId)
test$Pclass <- factor(test$Pclass)

# Replace NA variables for Age, SibSp, Parch, and Fare with the averages
# of those variables in both datasets
for (i in 1:nrow(train)) {
  if (is.na(train[i,6])) {  # Age
    train[i,6] <- mean(train$Age, na.rm = TRUE)
  }
  if (is.na(train[i,7])) {  # SibSp
    train[i,7] <- mean(train$SibSp, na.rm = TRUE)
  }
  if (is.na(train[i,8])) {  # Parch
    train[i,8] <- mean(train$Parch, na.rm = TRUE)
  }
  if (is.na(train[i,10])) {  # Fare
    train[i,10] <- mean(train$Fare, na.rm = TRUE)
  }
}

for (j in 1:nrow(test)) {
  if (is.na(test[j,5])) {  # Age
    test[j,5] <- mean(test$Age, na.rm = TRUE)
  }
  if (is.na(test[j,6])) {  # SibSp
    test[j,6] <- mean(test$SibSp, na.rm = TRUE)
  }
  if (is.na(test[j,7])) {  # Parch
    test[j,7] <- mean(test$Parch, na.rm = TRUE)
  }
  if (is.na(test[j,9])) {  # Fare
    test[j,9] <- mean(test$Fare, na.rm = TRUE)
  }
}

# Subset the data for cross-validation purposes
set.seed(826493)   # Set seed for reproducibility purposes
observations <- sample(1:891, size=445)   # Split data into half
trainingset <- train[observations,]  # Training set
validationset <- train[-observations,]   # Validation set

# Logistic linear regression model using the following explanatory variables:
# Age, SibSp, Parch, and Fare
model <- glm(Survived ~ Age+SibSp+Parch+Fare, data=trainingset, family = "binomial") # Model
summary(model)  # Summary of values generated by regression model
anova(model,test="Chisq")   # ANOVA test

# Testing the models on the training set
probs1 <- as.vector(predict(model, type="response"))
preds1 <- rep(0,250)  # Initialize prediction vector
preds1[probs1>0.5] <- 1 # p>0.5 -> 1
table(preds1,trainingset$Survived)  # 212/291 correct

# Testing the models on the validation set
probs1 <- as.vector(predict(model, newdata=validationset, type="response"))
preds1 <- rep(0,250)  # Initialize prediction vector
preds1[probs1>0.5] <- 1 # p>0.5 -> 1
table(preds1,validationset$Survived)   # 196/290 correct

# Providing the predictions and writing them out to a CSV file
predictions <- as.data.frame(predict(model, newdata=test, type="response"))

myanswers <- as.data.frame(test$PassengerId)   # Create data frame for storing predictions

mypredictions <- rep(0,418)  # Initialize prediction vector
mypredictions[predictions>0.5] <- 1 # p>0.5 -> 1
mypredictions <- as.data.frame(mypredictions)   # Convert to data frame

submission <- as_data_frame(cbind(myanswers,mypredictions))  # Combine the two data frames into one
names(submission) <- c("PassengerId","Survived")  # Rename the columns

write.table(submission, file = "mc7bk-titanic.csv", row.names=F, col.names=c("PassengerId","Survived"), sep=",")
